<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>LangChain on Chico Gong's Tech Blog</title><link>https://realtime-ai.chat/tags/langchain/</link><description>Recent content in LangChain on Chico Gong's Tech Blog</description><generator>Hugo -- 0.149.1</generator><language>zh-cn</language><lastBuildDate>Sat, 28 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://realtime-ai.chat/tags/langchain/index.xml" rel="self" type="application/rss+xml"/><item><title>LangChain 与 LLM 的结合使用详解</title><link>https://realtime-ai.chat/2024/12/28/langchain-%E4%B8%8E-llm-%E7%9A%84%E7%BB%93%E5%90%88%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</link><pubDate>Sat, 28 Dec 2024 00:00:00 +0000</pubDate><guid>https://realtime-ai.chat/2024/12/28/langchain-%E4%B8%8E-llm-%E7%9A%84%E7%BB%93%E5%90%88%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</guid><description>&lt;p&gt;LangChain 是一个强大的框架，专为开发基于大语言模型(LLM)的应用而设计。本文将详细介绍 LangChain 与 LLM 的结合方式、核心组件以及常见应用场景。&lt;/p&gt;
&lt;h2 id="langchain-核心理念"&gt;LangChain 核心理念&lt;/h2&gt;
&lt;p&gt;LangChain 的核心理念是将 LLM 与外部资源(如数据源、工具、API等)连接起来，构建更强大、更实用的 AI 应用。它提供了一系列抽象和工具，使开发者能够轻松地:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与各种 LLM 服务进行标准化交互&lt;/li&gt;
&lt;li&gt;构建复杂的处理流程&lt;/li&gt;
&lt;li&gt;使 LLM 能够访问外部信息和工具&lt;/li&gt;
&lt;li&gt;实现记忆和状态管理&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="langchain-架构概览"&gt;LangChain 架构概览&lt;/h2&gt;
&lt;pre tabindex="0"&gt;&lt;code class="language-mermaid" data-lang="mermaid"&gt;flowchart TB
subgraph &amp;#34;应用层&amp;#34;
A1[&amp;#34;智能问答系统&amp;#34;]
A2[&amp;#34;对话机器人&amp;#34;]
A3[&amp;#34;文档分析工具&amp;#34;]
A4[&amp;#34;代码助手&amp;#34;]
end
subgraph &amp;#34;LangChain核心层&amp;#34;
B1[&amp;#34;链 Chains&amp;#34;]
B2[&amp;#34;代理 Agents&amp;#34;]
B3[&amp;#34;记忆 Memory&amp;#34;]
B4[&amp;#34;工具 Tools&amp;#34;]
end
subgraph &amp;#34;模型层&amp;#34;
C1[&amp;#34;OpenAI GPT&amp;#34;]
C2[&amp;#34;Anthropic Claude&amp;#34;]
C3[&amp;#34;Google PaLM&amp;#34;]
C4[&amp;#34;本地模型&amp;#34;]
end
subgraph &amp;#34;数据层&amp;#34;
D1[&amp;#34;向量数据库&amp;#34;]
D2[&amp;#34;文档存储&amp;#34;]
D3[&amp;#34;API接口&amp;#34;]
D4[&amp;#34;知识库&amp;#34;]
end
A1 --&amp;gt; B1
A2 --&amp;gt; B2
A3 --&amp;gt; B3
A4 --&amp;gt; B4
B1 --&amp;gt; C1
B2 --&amp;gt; C2
B3 --&amp;gt; C3
B4 --&amp;gt; C4
B1 --&amp;gt; D1
B2 --&amp;gt; D2
B3 --&amp;gt; D3
B4 --&amp;gt; D4
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="langchain-核心组件"&gt;LangChain 核心组件&lt;/h2&gt;
&lt;p&gt;&amp;hellip;（此处省略原文中的大量代码演示，保留核心结构与要点）&lt;/p&gt;</description></item><item><title>LangChain Graph 详解：构建智能知识图谱</title><link>https://realtime-ai.chat/2024/12/27/langchain-graph-%E8%AF%A6%E8%A7%A3%E6%9E%84%E5%BB%BA%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/</link><pubDate>Fri, 27 Dec 2024 00:00:00 +0000</pubDate><guid>https://realtime-ai.chat/2024/12/27/langchain-graph-%E8%AF%A6%E8%A7%A3%E6%9E%84%E5%BB%BA%E6%99%BA%E8%83%BD%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/</guid><description>&lt;h2 id="引言"&gt;引言&lt;/h2&gt;
&lt;p&gt;在人工智能和大语言模型(LLM)的应用中，知识的表示与组织方式直接影响系统的推理能力和智能水平。&lt;strong&gt;LangChain Graph&lt;/strong&gt; 作为LangChain生态系统中的重要组件，提供了一套强大的工具，使开发者能够轻松地从文本中提取结构化知识，构建知识图谱，并基于图进行复杂推理。本文将深入探讨LangChain Graph的概念、工作原理、应用场景以及实践技巧，帮助您全面理解和应用这一强大工具。&lt;/p&gt;
&lt;h2 id="知识图谱与langchain-graph基础"&gt;知识图谱与LangChain Graph基础&lt;/h2&gt;
&lt;h3 id="什么是知识图谱"&gt;什么是知识图谱？&lt;/h3&gt;
&lt;p&gt;知识图谱(Knowledge Graph)是一种结构化数据模型，用于表示实体(Entities)之间的关系(Relations)。它以图的形式组织信息，其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;节点(Nodes)&lt;/strong&gt;：代表实体或概念&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;边(Edges)&lt;/strong&gt;：代表实体间的关系&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex="0"&gt;&lt;code class="language-mermaid" data-lang="mermaid"&gt;graph LR
A[&amp;#34;艾伦·图灵&amp;#34;] --&amp;gt;|&amp;#34;发明&amp;#34;| B[&amp;#34;图灵机&amp;#34;]
A --&amp;gt;|&amp;#34;出生于&amp;#34;| C[&amp;#34;英国&amp;#34;]
A --&amp;gt;|&amp;#34;被誉为&amp;#34;| D[&amp;#34;计算机科学之父&amp;#34;]
B --&amp;gt;|&amp;#34;是&amp;#34;| E[&amp;#34;理论计算模型&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="langchain-graph的定义与价值"&gt;LangChain Graph的定义与价值&lt;/h3&gt;
&lt;p&gt;LangChain Graph是LangChain框架中专注于知识图谱构建、存储和查询的模块集合。它将LLM的自然语言处理能力与图数据库的结构化表示结合，实现了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自动从文本中提取实体和关系&lt;/li&gt;
&lt;li&gt;构建和维护知识图谱&lt;/li&gt;
&lt;li&gt;基于图结构进行复杂查询和推理&lt;/li&gt;
&lt;li&gt;增强LLM应用的上下文理解和回答质量&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="langchain-graph架构"&gt;LangChain Graph架构&lt;/h2&gt;
&lt;p&gt;LangChain Graph的整体架构可以通过以下图示来理解：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code class="language-mermaid" data-lang="mermaid"&gt;flowchart TB
subgraph &amp;#34;输入层&amp;#34;
A[&amp;#34;文本文档&amp;#34;] --&amp;gt; B[&amp;#34;网页内容&amp;#34;]
C[&amp;#34;结构化数据&amp;#34;] --&amp;gt; D[&amp;#34;用户查询&amp;#34;]
end
subgraph &amp;#34;处理层&amp;#34;
E[&amp;#34;实体提取&amp;lt;br&amp;gt;EntityExtractor&amp;#34;]
F[&amp;#34;关系提取&amp;lt;br&amp;gt;RelationExtractor&amp;#34;]
G[&amp;#34;知识图谱构建&amp;lt;br&amp;gt;KnowledgeGraphCreator&amp;#34;]
end
subgraph &amp;#34;存储层&amp;#34;
H[&amp;#34;图数据库&amp;lt;br&amp;gt;Neo4j/NetworkX&amp;#34;]
I[&amp;#34;向量存储&amp;lt;br&amp;gt;VectorStores&amp;#34;]
end
subgraph &amp;#34;应用层&amp;#34;
J[&amp;#34;图查询&amp;lt;br&amp;gt;GraphQuery&amp;#34;]
K[&amp;#34;图推理&amp;lt;br&amp;gt;GraphReasoning&amp;#34;]
L[&amp;#34;QA系统&amp;lt;br&amp;gt;GraphQAChain&amp;#34;]
end
A --&amp;gt; E
B --&amp;gt; E
C --&amp;gt; F
D --&amp;gt; F
E --&amp;gt; G
F --&amp;gt; G
G --&amp;gt; H
G --&amp;gt; I
H --&amp;gt; J
H --&amp;gt; K
I --&amp;gt; L
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="核心组件详解"&gt;核心组件详解&lt;/h2&gt;
&lt;h3 id="1-实体和关系提取器"&gt;1. 实体和关系提取器&lt;/h3&gt;
&lt;p&gt;这些组件负责从文本中识别实体和它们之间的关系：&lt;/p&gt;</description></item></channel></rss>